{"version":3,"sources":["components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonItem/PersonItem.tsx","components/PeopleTable.tsx","api.ts","pages/PeoplePage.tsx","components/Navbar.tsx","pages/HomePage.tsx","pages/PageNotFound.tsx","App.tsx","index.tsx"],"names":["SexFiltr","PeopleFilters","people","handlePeople","useState","all","activeSexFiltr","setActiveSexFiltr","query","setQuery","centuries","setCenturies","useEffect","sexFilteredPeople","filter","person","sex","test","length","centuryFilteres","includes","Math","ceil","born","isFather","isMother","fatherName","toLocaleLowerCase","motherName","name","className","to","onClick","male","female","type","placeholder","value","onChange","e","target","toLowerCase","map","century","item","Loader","PersonLink","handleSlugUser","isParent","searchParams","findPerson","useMemo","parent","find","one","slug","PersonItem","slugUser","died","some","Sort","PeopleTable","params","useParams","setSlugUser","useSearchParams","window","location","hash","slice","setSearchParams","notSorted","sexSort","setSexSort","nameSort","setNameSort","bornSort","setBornSort","diedSort","setDiedSort","sortBy","setSortBy","ActiveLinkSexClassName","sort","cn","sortAsc","sortDesc","handleSort","setSort","columnName","set","delete","get","sortedPeople","a","b","valueA","valueB","localeCompare","arraySort","href","has","toString","API_URL","wait","delay","Promise","resolve","setTimeout","getPeople","then","fetch","response","json","PeoplePage","setPeople","errorMessage","setErrorMessage","isLoading","setIsLoading","filteredPeople","setFilteredPeople","fetchPeople","data","newPeople","ActiveLinkClassName","isActive","Navbar","role","HomePage","NotFoundPage","App","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.075ab65f.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-expressions */\nimport { Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Person } from '../types/Person';\n\ntype Props = {\n  people: Person[]\n  handlePeople: (people: Person[]) => void;\n};\n\nenum SexFiltr {\n  male = 'm',\n  female = 'f',\n  all = 'all',\n}\n\nexport const PeopleFilters = ({ people, handlePeople }: Props) => {\n  const [activeSexFiltr, setActiveSexFiltr]\n  = useState<SexFiltr>(SexFiltr.all);\n  const [query, setQuery] = useState<string>('');\n  const [centuries, setCenturies] = useState<number[]>([]);\n\n  useEffect(() => {\n    const sexFilteredPeople = people.filter(person => {\n      if (activeSexFiltr === SexFiltr.all) {\n        return person;\n      }\n\n      return person.sex === activeSexFiltr;\n    });\n\n    const test = centuries.length === 0 ? [16, 17, 18, 19, 20] : [...centuries];\n\n    const centuryFilteres = sexFilteredPeople.filter(person => {\n      return test.includes(Math.ceil(person.born / 100));\n    });\n\n    handlePeople(centuryFilteres.filter(person => {\n      let isFather = false;\n      let isMother = false;\n\n      if (person.fatherName) {\n        isFather = person.fatherName.toLocaleLowerCase().includes(query);\n      }\n\n      if (person.motherName) {\n        isMother = person.motherName.toLocaleLowerCase().includes(query);\n      }\n\n      return person.name.toLocaleLowerCase().includes(query)\n      || isFather || isMother;\n    }));\n  }, [query, activeSexFiltr, centuries]);\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <Link\n          className={activeSexFiltr === SexFiltr.all ? 'is-active' : ''}\n          to=\"#/people\"\n          onClick={() => {\n            setActiveSexFiltr(SexFiltr.all);\n          }}\n        >\n          All\n        </Link>\n        <Link\n          className={activeSexFiltr === SexFiltr.male ? 'is-active' : ''}\n          to=\"#/people?sex=m\"\n          onClick={() => setActiveSexFiltr(SexFiltr.male)}\n        >\n          Male\n        </Link>\n        <Link\n          className={activeSexFiltr === SexFiltr.female ? 'is-active' : ''}\n          to=\"#/people?sex=f\"\n          onClick={() => setActiveSexFiltr(SexFiltr.female)}\n        >\n          Female\n        </Link>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={e => setQuery(e.target.value.toLowerCase())}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {[16, 17, 18, 19, 20].map(century => (\n              <Link\n                key={century}\n                data-cy=\"century\"\n                className={`button mr-1${centuries.includes(century) ? ' is-info' : ''}`}\n                to={`#/people?centuries=${century}`}\n                onClick={() => {\n                  centuries.includes(century)\n                    ? setCenturies(centuries.filter(item => item !== century))\n                    : setCenturies([...centuries, century]);\n                }}\n              >\n                {century}\n              </Link>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <Link\n              data-cy=\"centuryALL\"\n              className=\"button is-success is-outlined\"\n              to=\"#/people\"\n              onClick={() => setCenturies([])}\n            >\n              All\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <Link\n          className=\"button is-link is-outlined is-fullwidth\"\n          to=\"#/people\"\n          onClick={() => {\n            setActiveSexFiltr(SexFiltr.all);\n            setQuery('');\n            setCenturies([]);\n          }}\n        >\n          Reset all filters\n        </Link>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useMemo } from 'react';\n// import { NavLink } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n  people: Person[];\n  handleSlugUser: (value: string) => void;\n  isParent: 'no' | 'mother' | 'father';\n  searchParams: string;\n};\n\nexport const PersonLink = ({\n  person,\n  handleSlugUser,\n  people,\n  isParent,\n  searchParams,\n}:Props) => {\n  const findPerson = useMemo(() => {\n    if (isParent === 'no') {\n      return person;\n    }\n\n    let parent = people.find(one => one.name === person.motherName);\n\n    if (isParent === 'father') {\n      parent = people.find(one => one.name === person.fatherName);\n    }\n\n    if (!parent) {\n      return person;\n    }\n\n    return parent;\n  }, []);\n\n  return (\n    // <a\n    //   className={findPerson.sex === 'f'\n    //     ? 'has-text-danger'\n    //     : ''}\n    //   href={`#/people/${findPerson.slug}${searchParams}`}\n    //   onClick={() => {\n    //     return handleSlugUser(findPerson.slug);\n    //   }}\n    // >\n    //   {findPerson.name}\n    // </a>\n    <Link\n      className={findPerson.sex === 'f'\n        ? 'has-text-danger'\n        : ''}\n      to={`#/people/${findPerson.slug}${searchParams}`}\n      onClick={() => {\n        return handleSlugUser(findPerson.slug);\n      }}\n    >\n      {findPerson.name}\n    </Link>\n  );\n};\n","import { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\n/* eslint-disable no-nested-ternary */\ntype Props = {\n  person: Person,\n  people: Person[];\n  handleSlugUser: (value: string) => void;\n  slugUser: string | undefined;\n  searchParams: string;\n};\n\nexport const PersonItem = ({\n  person,\n  people,\n  handleSlugUser,\n  slugUser,\n  searchParams,\n}:Props) => {\n  return (\n    <tr\n      data-cy=\"person\"\n      className={person.slug === slugUser\n        ? 'has-background-warning'\n        : ''}\n    >\n      <td>\n        <PersonLink\n          person={person}\n          handleSlugUser={handleSlugUser}\n          people={people}\n          isParent=\"no\"\n          searchParams={searchParams}\n        />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      {person.motherName !== null ? (\n        people.some(one => one.name === person.motherName) ? (\n          <td>\n            <PersonLink\n              person={person}\n              handleSlugUser={handleSlugUser}\n              people={people}\n              isParent=\"mother\"\n              searchParams={searchParams}\n            />\n          </td>\n        ) : (\n          <td>{person.motherName}</td>\n        )\n      ) : (\n        <td>-</td>\n      )}\n      {person.fatherName !== null ? (\n        people.some(one => one.name === person.fatherName) ? (\n          <td>\n            <PersonLink\n              person={person}\n              handleSlugUser={handleSlugUser}\n              people={people}\n              isParent=\"father\"\n              searchParams={searchParams}\n            />\n          </td>\n        ) : (\n          <td>{person.fatherName}</td>\n        )\n      ) : (\n        <td>-</td>\n      )}\n    </tr>\n  );\n};\n","/* eslint-disable no-else-return */\n/* eslint-disable @typescript-eslint/no-unused-expressions */\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Person } from '../types';\nimport { PersonItem } from './PersonItem/PersonItem';\n\ntype Props = {\n  people: Person[],\n};\n\nenum Sort {\n  notSorted,\n  sortAsc,\n  sortDesc,\n}\n\ntype SortBy = 'name' | 'sex' | 'born' | 'died' | null;\n\nexport const PeopleTable = ({ people }:Props) => {\n  const params = useParams();\n  const [slugUser, setSlugUser] = useState<string | undefined>(params.slug);\n  const [searchParams, setSearchParams]\n  = useSearchParams((window.location.hash).slice(8));\n  const [sexSort, setSexSort] = useState<Sort>(Sort.notSorted);\n  const [nameSort, setNameSort] = useState<Sort>(Sort.notSorted);\n  // const [diedSort, setDiedSort] = useState<Sort>(Sort.notSorted);\n  const [bornSort, setBornSort] = useState<Sort>(Sort.notSorted);\n  const [diedSort, setDiedSort] = useState<Sort>(Sort.notSorted);\n  const [sortBy, setSortBy] = useState<SortBy | null>(null);\n\n  const handleSlugUser = (value: string) => {\n    setSlugUser(value);\n  };\n\n  const ActiveLinkSexClassName = (sort: Sort) => cn(\n    { 'fas fa-sort': sort === Sort.notSorted },\n    { 'fas fa-sort-up': sort === Sort.sortAsc },\n    { 'fas fa-sort-down': sort === Sort.sortDesc },\n  );\n\n  const handleSort = (\n    sort: Sort,\n    setSort: (sort: Sort) => void,\n    columnName: string,\n  ) => {\n    if (sort === Sort.notSorted) {\n      setSort(Sort.sortAsc);\n      searchParams.set('sort', columnName);\n      setSearchParams(searchParams);\n    } else if (sort === Sort.sortAsc) {\n      setSort(Sort.sortDesc);\n      searchParams.set('order', 'desc');\n      setSearchParams(searchParams);\n    } else {\n      setSort(Sort.notSorted);\n      searchParams.delete('sort');\n      searchParams.delete('order');\n    }\n  };\n\n  const arraySort = (columnName: SortBy) => {\n    let sort: Sort = Sort.notSorted;\n\n    switch (columnName) {\n      case 'name':\n        sort = nameSort;\n        break;\n      case 'sex':\n        sort = sexSort;\n        break;\n      case 'born':\n        sort = bornSort;\n        break;\n      case 'died':\n        sort = diedSort;\n        break;\n      default: break;\n    }\n\n    if (columnName) {\n      switch (sort) {\n        case Sort.sortAsc:\n          return (people.slice().sort((a, b) => {\n            const valueA = a[columnName];\n            const valueB = b[columnName];\n\n            if (typeof valueA === 'string' && typeof valueB === 'string') {\n              return valueA.localeCompare(valueB);\n            } else if (\n              typeof valueA === 'number' && typeof valueB === 'number'\n            ) {\n              return valueA - valueB;\n            }\n\n            return 0;\n          }));\n        case Sort.sortDesc:\n          return (people.slice().sort((a, b) => {\n            const valueA = a[columnName];\n            const valueB = b[columnName];\n\n            if (typeof valueA === 'string' && typeof valueB === 'string') {\n              return valueB.localeCompare(valueA);\n            } else if (\n              typeof valueA === 'number' && typeof valueB === 'number'\n            ) {\n              return valueB - valueA;\n            }\n\n            return 0;\n          }));\n        case Sort.notSorted:\n          return [...people];\n        default:\n          return people;\n      }\n    }\n\n    return people;\n  };\n\n  useEffect(() => {\n    const sort = (searchParams.get('sort'));\n\n    switch (sort) {\n      case 'name':\n        setNameSort(Sort.sortAsc);\n        searchParams.get('order') === 'desc'\n          ? setNameSort(Sort.sortDesc) : null;\n        setSortBy('name');\n        break;\n      case 'sex':\n        setSexSort(Sort.sortAsc);\n        searchParams.get('order') === 'desc'\n          ? setSexSort(Sort.sortDesc) : null;\n        setSortBy('sex');\n        break;\n      case 'born':\n        setBornSort(Sort.sortAsc);\n        searchParams.get('order') === 'desc'\n          ? setBornSort(Sort.sortDesc) : null;\n        setSortBy('born');\n        break;\n      case 'died':\n        setDiedSort(Sort.sortAsc);\n        searchParams.get('order') === 'desc'\n          ? setDiedSort(Sort.sortDesc) : null;\n        setSortBy('died');\n        break;\n      default: break;\n    }\n  }, [searchParams]);\n\n  const sortedPeople = arraySort(sortBy);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Name\n              <a\n                href={searchParams.has('sort') ? `#/people?${searchParams.toString()}`\n                  : '#/people'}\n                onClick={() => {\n                  searchParams.delete('order');\n                  handleSort(nameSort, setNameSort, 'name');\n                  setSexSort(Sort.notSorted);\n                  setBornSort(Sort.notSorted);\n                  setDiedSort(Sort.notSorted);\n                }}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={ActiveLinkSexClassName(nameSort)}\n                  />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Sex\n              <a\n                href={searchParams.has('sort') ? `#/people?${searchParams.toString()}`\n                  : '#/people'}\n                onClick={() => {\n                  searchParams.delete('order');\n                  handleSort(sexSort, setSexSort, 'sex');\n                  setNameSort(Sort.notSorted);\n                  setBornSort(Sort.notSorted);\n                  setDiedSort(Sort.notSorted);\n                }}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={ActiveLinkSexClassName(sexSort)}\n                  />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Born\n              <a\n                href={searchParams.has('sort') ? `#/people?${searchParams.toString()}`\n                  : '#/people'}\n                onClick={() => {\n                  searchParams.delete('order');\n                  handleSort(bornSort, setBornSort, 'born');\n                  setNameSort(Sort.notSorted);\n                  setSexSort(Sort.notSorted);\n                  setDiedSort(Sort.notSorted);\n                }}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={ActiveLinkSexClassName(bornSort)}\n                  />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Died\n              <a\n                href={searchParams.has('sort') ? `#/people?${searchParams.toString()}`\n                  : '#/people'}\n                onClick={() => {\n                  searchParams.delete('order');\n                  handleSort(diedSort, setDiedSort, 'died');\n                  setNameSort(Sort.notSorted);\n                  setSexSort(Sort.notSorted);\n                  setBornSort(Sort.notSorted);\n                }}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={ActiveLinkSexClassName(diedSort)}\n                  />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {sortedPeople.map(person => (\n          <PersonItem\n            key={person.slug}\n            person={person}\n            people={people}\n            handleSlugUser={handleSlugUser}\n            slugUser={slugUser}\n            searchParams={searchParams.toString()}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\n\nimport { PeopleFilters } from '../components/PeopleFilters';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [filteredPeople, setFilteredPeople] = useState<Person[]>([]);\n\n  // console.log(filteredPeople);\n\n  useEffect(() => {\n    const fetchPeople = async () => {\n      setIsLoading(true);\n      try {\n        const data = await getPeople();\n\n        setPeople(data);\n        setFilteredPeople(data);\n      } catch (error) {\n        setErrorMessage('Unable to load people');\n      }\n\n      setIsLoading(false);\n    };\n\n    fetchPeople();\n  }, []);\n\n  const handlePeople = (newPeople: Person[]) => {\n    setFilteredPeople(newPeople);\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          {isLoading\n            ? (<Loader />)\n            : (\n              <>\n                {errorMessage && (\n                  <>\n                    <p\n                      data-cy=\"peopleLoadingError\"\n                      className=\"has-text-danger\"\n                    >\n                      Something went wrong\n                    </p>\n                    <p data-cy=\"noPeopleMessage\">\n                      There are no people on the server\n                    </p>\n                  </>\n                )}\n                <div className=\"column is-7-tablet is-narrow-desktop\">\n                  <PeopleFilters\n                    people={people}\n                    handlePeople={handlePeople}\n                  />\n                </div>\n\n                <div className=\"column\">\n                  <div className=\"box table-container\">\n                    {filteredPeople.length > 0\n                      ? <PeopleTable people={filteredPeople} />\n                      : (\n                        <p>\n                          There are no people matching\n                          the current search criteria\n                        </p>\n                      )}\n                  </div>\n                </div>\n              </>\n            )}\n\n        </div>\n      </div>\n    </>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nconst ActiveLinkClassName = ({ isActive }: { isActive: boolean }) => cn(\n  'navbar-item',\n  { 'has-background-grey-lighter': isActive },\n);\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={ActiveLinkClassName}\n          >\n            Home\n          </NavLink>\n          <NavLink\n            aria-current=\"page\"\n            to=\"/people\"\n            className={ActiveLinkClassName}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/PageNotFound';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/people\" element={<PeoplePage />}>\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n            <Route\n              path=\"/home\"\n              element={<Navigate to=\"/\" />}\n            />\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n          {/* <h1 className=\"title\">Home Page</h1> */}\n          {/* <PeoplePage /> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}