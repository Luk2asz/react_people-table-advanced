{"version":3,"sources":["utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonItem/PersonItem.tsx","components/PeopleTable.tsx","api.ts","pages/PeoplePage.tsx","components/Navbar.tsx","pages/HomePage.tsx","pages/PageNotFound.tsx","App.tsx","index.tsx"],"names":["getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","to","search","SexFiltr","PeopleFilters","people","handlePeople","handleParams","window","location","hash","substring","indexOf","setSearchParams","useState","all","activeSexFiltr","setActiveSexFiltr","get","query","setQuery","getAll","map","century","centuries","setCenturies","useEffect","male","female","includes","sexFilteredPeople","filter","person","sex","length","centuryFilteres","Math","ceil","born","isFather","isMother","fatherName","toLocaleLowerCase","motherName","name","className","onClick","type","placeholder","onChange","e","target","toLowerCase","item","paramsCentury","String","Loader","PersonLink","handleSlugUser","isParent","allParams","findPerson","useMemo","parent","find","one","slug","PersonItem","slugUser","died","some","Sort","PeopleTable","useParams","setSlugUser","notSorted","sexSort","setSexSort","nameSort","setNameSort","bornSort","setBornSort","diedSort","setDiedSort","sortBy","setSortBy","ActiveLinkSexClassName","sort","cn","sortAsc","sortDesc","handleSort","setSort","columnName","sortedPeople","slice","a","b","valueA","valueB","localeCompare","arraySort","has","order","API_URL","wait","delay","Promise","resolve","setTimeout","getPeople","then","fetch","response","json","PeoplePage","setPeople","errorMessage","setErrorMessage","isLoading","setIsLoading","filteredPeople","setFilteredPeople","setAllParams","fetchPeople","data","newPeople","ActiveLinkClassName","isActive","Navbar","role","HomePage","NotFoundPage","App","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.26c14d46.chunk.js","sourcesContent":["export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import React from 'react';\nimport { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-shadow */\n/* eslint-disable @typescript-eslint/no-unused-expressions */\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Person } from '../types/Person';\nimport { SearchLink } from './SearchLink';\n\ntype Props = {\n  people: Person[]\n  handlePeople: (people: Person[]) => void;\n  handleParams: (data: string) => void;\n};\n\nenum SexFiltr {\n  male = 'm',\n  female = 'f',\n  all = 'all',\n}\n\nexport const PeopleFilters = ({\n  people,\n  handlePeople,\n  handleParams,\n}: Props) => {\n  const [searchParams, setSearchParams] = useSearchParams(\n    (window.location.hash).substring(window.location.hash.indexOf('?')),\n  );\n  const [activeSexFiltr, setActiveSexFiltr]\n  = useState<SexFiltr>(SexFiltr.all);\n  const [query, setQuery] = useState<string>(searchParams.get('query') ?? '');\n  const [centuries, setCenturies] = useState<number[]>(\n    searchParams.getAll('centuries').map(century => +century),\n  );\n\n  useEffect(() => {\n    if (searchParams.get('sex') === SexFiltr.male) {\n      setActiveSexFiltr(SexFiltr.male);\n    } else if (searchParams.get('sex') === SexFiltr.female) {\n      setActiveSexFiltr(SexFiltr.female);\n    }\n\n    if (window.location.hash.includes('?')) {\n      handleParams(\n        (window.location.hash).substring(window.location.hash.indexOf('?')),\n      );\n    } else {\n      handleParams('');\n    }\n  });\n\n  useEffect(() => {\n    const sexFilteredPeople = people.filter(person => {\n      if (activeSexFiltr === SexFiltr.all) {\n        return person;\n      }\n\n      return person.sex === activeSexFiltr;\n    });\n\n    const century = centuries.length === 0\n      ? [16, 17, 18, 19, 20] : [...centuries];\n\n    const centuryFilteres = sexFilteredPeople.filter(person => {\n      return century.includes(Math.ceil(person.born / 100));\n    });\n\n    handlePeople(centuryFilteres.filter(person => {\n      let isFather = false;\n      let isMother = false;\n\n      if (person.fatherName) {\n        isFather = person.fatherName.toLocaleLowerCase().includes(query);\n      }\n\n      if (person.motherName) {\n        isMother = person.motherName.toLocaleLowerCase().includes(query);\n      }\n\n      return person.name.toLocaleLowerCase().includes(query)\n      || isFather || isMother;\n    }));\n  }, [query, activeSexFiltr, centuries]);\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          className={activeSexFiltr === SexFiltr.all ? 'is-active' : ''}\n          params={{ sex: null }}\n          onClick={() => {\n            setActiveSexFiltr(SexFiltr.all);\n            searchParams.delete('sex');\n          }}\n        >\n          All\n        </SearchLink>\n        <SearchLink\n          className={activeSexFiltr === SexFiltr.male ? 'is-active' : ''}\n          params={{ sex: 'm' }}\n          onClick={() => setActiveSexFiltr(SexFiltr.male)}\n        >\n          Male\n        </SearchLink>\n        <SearchLink\n          className={activeSexFiltr === SexFiltr.female ? 'is-active' : ''}\n          params={{ sex: 'f' }}\n          onClick={() => setActiveSexFiltr(SexFiltr.female)}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={e => {\n              setQuery(e.target.value.toLowerCase());\n              setSearchParams(\n                { ...searchParams, query: e.target.value.toLowerCase() },\n              );\n            }}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {[16, 17, 18, 19, 20].map(century => (\n              <SearchLink\n                key={century}\n                data-cy=\"century\"\n                className={`button mr-1${centuries.includes(century) ? ' is-info' : ''}`}\n                onClick={() => {\n                  centuries.includes(century)\n                    ? setCenturies(centuries.filter(item => item !== century))\n                    : setCenturies([...centuries, century]);\n                }}\n                params={\n                  {\n                    centuries: centuries.includes(century)\n                      ? centuries\n                        .filter(paramsCentury => paramsCentury !== century)\n                        .map(century => String(century))\n                      : [...centuries\n                        .map(century => String(century)), String(century)],\n\n                  }\n                }\n              >\n                {century}\n              </SearchLink>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className=\"button is-success is-outlined\"\n              params={{ centuries: null }}\n              onClick={() => setCenturies([])}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{ centuries: null, sex: null }}\n          onClick={() => {\n            setActiveSexFiltr(SexFiltr.all);\n            setQuery('');\n            setCenturies([]);\n          }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useMemo } from 'react';\n// import { NavLink } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n  people: Person[];\n  handleSlugUser: (value: string) => void;\n  isParent: 'no' | 'mother' | 'father';\n  allParams: string;\n};\n\nexport const PersonLink = ({\n  person,\n  handleSlugUser,\n  people,\n  isParent,\n  allParams,\n}:Props) => {\n  const findPerson = useMemo(() => {\n    if (isParent === 'no') {\n      return person;\n    }\n\n    let parent = people.find(one => one.name === person.motherName);\n\n    if (isParent === 'father') {\n      parent = people.find(one => one.name === person.fatherName);\n    }\n\n    if (!parent) {\n      return person;\n    }\n\n    return parent;\n  }, []);\n\n  return (\n    <Link\n      className={findPerson.sex === 'f'\n        ? 'has-text-danger'\n        : ''}\n      to={`/people/${findPerson.slug}${allParams}`}\n      onClick={() => {\n        return handleSlugUser(findPerson.slug);\n      }}\n    >\n      {findPerson.name}\n    </Link>\n  );\n};\n","import { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\n/* eslint-disable no-nested-ternary */\ntype Props = {\n  person: Person,\n  people: Person[];\n  handleSlugUser: (value: string) => void;\n  slugUser: string | undefined;\n  allParams: string;\n};\n\nexport const PersonItem = ({\n  person,\n  people,\n  handleSlugUser,\n  slugUser,\n  allParams,\n}:Props) => {\n  return (\n    <tr\n      data-cy=\"person\"\n      className={person.slug === slugUser\n        ? 'has-background-warning'\n        : ''}\n    >\n      <td>\n        <PersonLink\n          person={person}\n          handleSlugUser={handleSlugUser}\n          people={people}\n          isParent=\"no\"\n          allParams={allParams}\n        />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      {person.motherName !== null ? (\n        people.some(one => one.name === person.motherName) ? (\n          <td>\n            <PersonLink\n              person={person}\n              handleSlugUser={handleSlugUser}\n              people={people}\n              isParent=\"mother\"\n              allParams={allParams}\n            />\n          </td>\n        ) : (\n          <td>{person.motherName}</td>\n        )\n      ) : (\n        <td>-</td>\n      )}\n      {person.fatherName !== null ? (\n        people.some(one => one.name === person.fatherName) ? (\n          <td>\n            <PersonLink\n              person={person}\n              handleSlugUser={handleSlugUser}\n              people={people}\n              isParent=\"father\"\n              allParams={allParams}\n            />\n          </td>\n        ) : (\n          <td>{person.fatherName}</td>\n        )\n      ) : (\n        <td>-</td>\n      )}\n    </tr>\n  );\n};\n","/* eslint-disable no-else-return */\n/* eslint-disable @typescript-eslint/no-unused-expressions */\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Person } from '../types';\nimport { PersonItem } from './PersonItem/PersonItem';\nimport { SearchLink } from './SearchLink';\n\ntype Props = {\n  people: Person[],\n  allParams: string,\n};\n\nenum Sort {\n  notSorted,\n  sortAsc,\n  sortDesc,\n}\n\ntype SortBy = 'name' | 'sex' | 'born' | 'died' | null;\n\nexport const PeopleTable = ({ people, allParams }:Props) => {\n  const params = useParams();\n  const [slugUser, setSlugUser] = useState<string | undefined>(params.slug);\n  const [searchParams, setSearchParams] = useSearchParams(\n    (window.location.hash).substring(window.location.hash.indexOf('?')),\n  );\n  const [sexSort, setSexSort] = useState<Sort>(Sort.notSorted);\n  const [nameSort, setNameSort] = useState<Sort>(Sort.notSorted);\n  const [bornSort, setBornSort] = useState<Sort>(Sort.notSorted);\n  const [diedSort, setDiedSort] = useState<Sort>(Sort.notSorted);\n  const [sortBy, setSortBy] = useState<SortBy | null>(null);\n\n  const handleSlugUser = (value: string) => {\n    setSlugUser(value);\n  };\n\n  const ActiveLinkSexClassName = (sort: Sort) => cn(\n    { 'fas fa-sort': sort === Sort.notSorted },\n    { 'fas fa-sort-up': sort === Sort.sortAsc },\n    { 'fas fa-sort-down': sort === Sort.sortDesc },\n  );\n\n  const handleSort = (\n    sort: Sort,\n    setSort: (sort: Sort) => void,\n    columnName: string,\n  ) => {\n    if (sort === Sort.notSorted) {\n      setSort(Sort.sortAsc);\n      searchParams.set('sort', columnName);\n      setSearchParams(searchParams);\n    } else if (sort === Sort.sortAsc) {\n      setSort(Sort.sortDesc);\n      searchParams.set('order', 'desc');\n      setSearchParams(searchParams);\n    } else {\n      setSort(Sort.notSorted);\n      searchParams.delete('sort');\n      searchParams.delete('order');\n    }\n  };\n\n  const arraySort = (columnName: SortBy) => {\n    let sort: Sort = Sort.notSorted;\n\n    switch (columnName) {\n      case 'name':\n        sort = nameSort;\n        break;\n      case 'sex':\n        sort = sexSort;\n        break;\n      case 'born':\n        sort = bornSort;\n        break;\n      case 'died':\n        sort = diedSort;\n        break;\n      default: break;\n    }\n\n    if (columnName) {\n      switch (sort) {\n        case Sort.sortAsc:\n          return (people.slice().sort((a, b) => {\n            const valueA = a[columnName];\n            const valueB = b[columnName];\n\n            if (typeof valueA === 'string' && typeof valueB === 'string') {\n              return valueA.localeCompare(valueB);\n            } else if (\n              typeof valueA === 'number' && typeof valueB === 'number'\n            ) {\n              return valueA - valueB;\n            }\n\n            return 0;\n          }));\n        case Sort.sortDesc:\n          return (people.slice().sort((a, b) => {\n            const valueA = a[columnName];\n            const valueB = b[columnName];\n\n            if (typeof valueA === 'string' && typeof valueB === 'string') {\n              return valueB.localeCompare(valueA);\n            } else if (\n              typeof valueA === 'number' && typeof valueB === 'number'\n            ) {\n              return valueB - valueA;\n            }\n\n            return 0;\n          }));\n        case Sort.notSorted:\n          return [...people];\n        default:\n          return people;\n      }\n    }\n\n    return people;\n  };\n\n  useEffect(() => {\n    const sort = (searchParams.get('sort'));\n\n    switch (sort) {\n      case 'name':\n        setNameSort(Sort.sortAsc);\n        searchParams.get('order') === 'desc'\n          ? setNameSort(Sort.sortDesc) : null;\n        setSortBy('name');\n        break;\n      case 'sex':\n        setSexSort(Sort.sortAsc);\n        searchParams.get('order') === 'desc'\n          ? setSexSort(Sort.sortDesc) : null;\n        setSortBy('sex');\n        break;\n      case 'born':\n        setBornSort(Sort.sortAsc);\n        searchParams.get('order') === 'desc'\n          ? setBornSort(Sort.sortDesc) : null;\n        setSortBy('born');\n        break;\n      case 'died':\n        setDiedSort(Sort.sortAsc);\n        searchParams.get('order') === 'desc'\n          ? setDiedSort(Sort.sortDesc) : null;\n        setSortBy('died');\n        break;\n      default: break;\n    }\n  }, [searchParams]);\n\n  const sortedPeople = arraySort(sortBy);\n\n  const sort = (value: string) => {\n    return searchParams.get('sort') !== value || !searchParams.has('order')\n      ? value : null;\n  };\n\n  const order = (value: string) => {\n    return searchParams.get('sort') === value && !searchParams.has('order')\n      ? 'desc' : null;\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Name\n              <SearchLink\n                params={{ sort: sort('name'), order: order('name') }}\n                onClick={() => {\n                  searchParams.delete('order');\n                  handleSort(nameSort, setNameSort, 'name');\n                  setSexSort(Sort.notSorted);\n                  setBornSort(Sort.notSorted);\n                  setDiedSort(Sort.notSorted);\n                }}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={ActiveLinkSexClassName(nameSort)}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Sex\n              <SearchLink\n                params={{ sort: sort('sex'), order: order('sex') }}\n                onClick={() => {\n                  searchParams.delete('order');\n                  handleSort(sexSort, setSexSort, 'sex');\n                  setNameSort(Sort.notSorted);\n                  setBornSort(Sort.notSorted);\n                  setDiedSort(Sort.notSorted);\n                }}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={ActiveLinkSexClassName(sexSort)}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Born\n              <SearchLink\n                params={{ sort: sort('born'), order: order('born') }}\n                onClick={() => {\n                  searchParams.delete('order');\n                  handleSort(bornSort, setBornSort, 'born');\n                  setNameSort(Sort.notSorted);\n                  setSexSort(Sort.notSorted);\n                  setDiedSort(Sort.notSorted);\n                }}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={ActiveLinkSexClassName(bornSort)}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Died\n              <SearchLink\n                params={{ sort: sort('died'), order: order('died') }}\n                onClick={() => {\n                  searchParams.delete('order');\n                  handleSort(diedSort, setDiedSort, 'died');\n                  setNameSort(Sort.notSorted);\n                  setSexSort(Sort.notSorted);\n                  setBornSort(Sort.notSorted);\n                }}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={ActiveLinkSexClassName(diedSort)}\n                  />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {sortedPeople.map(person => (\n          <PersonItem\n            key={person.slug}\n            person={person}\n            people={people}\n            handleSlugUser={handleSlugUser}\n            slugUser={slugUser}\n            allParams={allParams}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\n\nimport { PeopleFilters } from '../components/PeopleFilters';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [filteredPeople, setFilteredPeople] = useState<Person[]>([]);\n  const [allParams, setAllParams] = useState('');\n\n  const handleParams = (data: string) => {\n    setAllParams(data);\n  };\n\n  useEffect(() => {\n    const fetchPeople = async () => {\n      setIsLoading(true);\n      try {\n        const data = await getPeople();\n\n        setPeople(data);\n        setFilteredPeople(data);\n      } catch (error) {\n        setErrorMessage('Unable to load people');\n      }\n\n      setIsLoading(false);\n    };\n\n    fetchPeople();\n  }, []);\n\n  const handlePeople = (newPeople: Person[]) => {\n    setFilteredPeople(newPeople);\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          {isLoading\n            ? (<Loader />)\n            : (\n              <>\n                {errorMessage ? (\n                  <>\n                    <p\n                      data-cy=\"peopleLoadingError\"\n                      className=\"has-text-danger\"\n                    >\n                      Something went wrong\n                    </p>\n                  </>\n                )\n                  : (\n                    <>\n                      {people.length === 0 ? (\n                        <p data-cy=\"noPeopleMessage\">\n                          There are no people on the server\n                        </p>\n                      ) : (\n                        <>\n                          <div className=\"column is-7-tablet is-narrow-desktop\">\n                            <PeopleFilters\n                              people={people}\n                              handlePeople={handlePeople}\n                              handleParams={handleParams}\n                            />\n                          </div>\n                          <div className=\"column\">\n                            <div className=\"box table-container\">\n                              {filteredPeople.length > 0\n                                ? (\n                                  <PeopleTable\n                                    people={filteredPeople}\n                                    allParams={allParams}\n                                  />\n                                )\n                                : (\n                                  <p>\n                                    There are no people matching\n                                    the current search criteria\n                                  </p>\n                                )}\n                            </div>\n                          </div>\n\n                        </>\n                      )}\n\n                    </>\n                  )}\n              </>\n            )}\n\n        </div>\n      </div>\n    </>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nconst ActiveLinkClassName = ({ isActive }: { isActive: boolean }) => cn(\n  'navbar-item',\n  { 'has-background-grey-lighter': isActive },\n);\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={ActiveLinkClassName}\n          >\n            Home\n          </NavLink>\n          <NavLink\n            aria-current=\"page\"\n            to=\"/people\"\n            className={ActiveLinkClassName}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/PageNotFound';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/people\" element={<PeoplePage />}>\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n            <Route\n              path=\"/home\"\n              element={<Navigate to=\"/\" />}\n            />\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}